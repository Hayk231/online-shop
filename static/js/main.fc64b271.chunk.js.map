{"version":3,"sources":["Containers/Admin/Admin.scss","Containers/Main/Header/Header.scss","Containers/Favours/Favours.scss","Containers/Main/ShopHead/Products/Products.scss","Containers/Main/DefContent/DefContent.scss","Components/Spinner/Spinner.scss","Containers/Main/ShopHead/ShopHead.scss","App.scss","store/reducer.js","firebaseConfig.js","Containers/Main/Header/Header.js","Containers/Main/DefContent/DefContent.js","Components/Product/Product.js","Components/Spinner/Spinner.js","Containers/Main/ShopHead/Products/Products.js","Containers/Main/ShopHead/ShopHead.js","Containers/Admin/AdminAdd.js","Containers/Admin/AdminPanel.js","Containers/Admin/Admin.js","Containers/Favours/Favour.js","Containers/Favours/Favours.js","Containers/Main/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","initialState","allData","reducer","state","action","type","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseAppAuth","firebase","firebaseConfig","auth","providers","googleProvider","GoogleAuthProvider","Header","handleOutClick","e","pop","document","getElementById","icon","style","display","popRef","contains","target","closeUserPop","signInHandler","props","signInWithGoogle","then","res","openUserPopup","addEventListener","this","prevProps","prevState","snapshot","user","saveUser","favours","userProducts","length","className","classes","header","to","height","src","process","alt","connect","user_favours","faHeart","connect_cont","ref","faUserCircle","onClick","id","user_info","user_logged","photoURL","displayName","signOut","outButt","user_login","faGoogle","Component","withFirebaseAuth","DefContent","setTimeout","homeCont","classList","add","content","head_img","autoPlay","muted","loop","home_cont","back_over","Product","addToFavourites","prod","userId","newPostKey","database","child","push","key","pushData","data","set","backUrl","info","imageUrl","product","img_div","backgroundImage","cont_div","isFavour","regFaHeart","name","price","spinner","par","main","Products","products","on","val","finArr","setState","prod_head","map","el","userEl","ShopHead","pageSet","scrollHandler","scBar","scrolled","scrollTop","scrollHeight","clientHeight","width","scrollBar","shopHead","loggedUser","uid","shop_head","top_scroll","AdminAdd","selectImage","value","URL","createObjectURL","files","removeImageHandler","imageInput","addProductHandler","nameRef","descRef","priceRef","file","storageRef","storage","put","getDownloadURL","url","hideAdd","alert","addRef","admin_add_par","admin_add_cont","admin_add_img","accept","onChange","admin_add_del","admin_add_inputs","placeholder","step","min","AdminPanel","openAdd","editId","isButt","editProduct","deleteProduct","remove","saveChanges","index","inputs","Array","from","getElementsByName","update","border","cancelEdit","admin_panel","admin_add_cont_top","list_cont","canEdit","canEditClass","faTimesCircle","defaultValue","readOnly","faPencilAlt","title","faTrashAlt","faCheck","color","faTimes","Admin","Favour","removeFromFavours","showData","favour_child","favour_child_img","favour_child_cont","favour_child_remove","delId","Favours","favour_head","favours_par","Main","saveUserHandler","exact","path","component","render","App","Boolean","window","location","hostname","match","store","createStore","ReactDOM","basename","pathname"],"mappings":"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","file":"static/js/main.fc64b271.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"admin\":\"Admin__admin___1O2go\",\"log_form\":\"Admin__log_form___3XmnU\",\"admin_panel\":\"Admin__admin_panel___327_n\",\"admin_add_cont_top\":\"Admin__admin_add_cont_top___2QEsz\",\"list_cont\":\"Admin__list_cont___3gS55\",\"input_can_edit\":\"Admin__input_can_edit___2kBfW\",\"admin_add_par\":\"Admin__admin_add_par___1NeXZ\",\"admin_add_cont\":\"Admin__admin_add_cont___1HF1L\",\"admin_add_img\":\"Admin__admin_add_img___1-LAN\",\"admin_add_inputs\":\"Admin__admin_add_inputs___2jPUX\",\"admin_add_del\":\"Admin__admin_add_del___2YeHY\",\"admin_add_cont_opened\":\"Admin__admin_add_cont_opened___acSAq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header__header___3i1v2\",\"connect\":\"Header__connect___1xXgL\",\"connect_cont\":\"Header__connect_cont___MXSpB\",\"user_info\":\"Header__user_info___3SjkQ\",\"user_login\":\"Header__user_login___370rd\",\"user_logged\":\"Header__user_logged___2KrDO\",\"outButt\":\"Header__outButt___330SN\",\"user_favours\":\"Header__user_favours___EIz9q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"favour_head\":\"Favours__favour_head___3n2vt\",\"favours_par\":\"Favours__favours_par___3Vpsm\",\"favour_child\":\"Favours__favour_child___Xtk1f\",\"favour_child_img\":\"Favours__favour_child_img___2NHZW\",\"favour_child_cont\":\"Favours__favour_child_cont___2DPgh\",\"favour_child_remove\":\"Favours__favour_child_remove___3GgBg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"prod_head\":\"Products__prod_head___369ZW\",\"product\":\"Products__product___3i_pV\",\"img_div\":\"Products__img_div___3b4re\",\"cont_div\":\"Products__cont_div___1ouqj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"DefContent__content___1tKsQ\",\"head_img\":\"DefContent__head_img___3Ncs6\",\"home_cont\":\"DefContent__home_cont___33xwx\",\"back_over\":\"DefContent__back_over___2x5vv\",\"opened\":\"DefContent__opened___1obJK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"par\":\"Spinner__par___A2UMm\",\"main\":\"Spinner__main___W6rh8\",\"spinner\":\"Spinner__spinner___2cWe8\",\"shadow\":\"Spinner__shadow___28DQ0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"shop_head\":\"ShopHead__shop_head___1BBXh\",\"top_scroll\":\"ShopHead__top_scroll___3pbkq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App__App___wmyqV\"};","const initialState = {\r\n    allData: []\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'GET_DATA' : {\r\n            // const finArr = [];\r\n            // let ref = firebase.database().ref('/products');\r\n            // ref.on('value', snapshot => {\r\n            //     const products = snapshot.val();\r\n            //     for (let key in products) {\r\n            //         finArr.push({id: key, info : products[key]})\r\n            //     }\r\n            // });\r\n            return {\r\n                ...state,\r\n                allData: []\r\n            };\r\n        }\r\n\r\n        default : return state\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n","const config = {\r\n    apiKey: \"AIzaSyAd_iZpMCUr64IfgmpMC8VzMlNxc89lyXU\",\r\n    authDomain: \"online-shop-757ab.firebaseapp.com\",\r\n    databaseURL: \"https://online-shop-757ab.firebaseio.com\",\r\n    projectId: \"online-shop-757ab\",\r\n    storageBucket: \"online-shop-757ab.appspot.com\",\r\n    messagingSenderId: \"454382573274\",\r\n    appId: \"1:454382573274:web:b301179a639886b28f37e3\",\r\n    measurementId: \"G-HGLPLTY0Q2\"\r\n};\r\n\r\nexport default config;","import React, {Component} from 'react';\r\nimport classes from './Header.scss';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport withFirebaseAuth from 'react-with-firebase-auth'\r\nimport * as firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport firebaseConfig from '../../../firebaseConfig';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faHeart} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {faUserCircle} from \"@fortawesome/free-regular-svg-icons/faUserCircle\";\r\nimport {faGoogle} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst firebaseAppAuth = firebaseApp.auth();\r\nconst providers = {\r\n    googleProvider: new firebase.auth.GoogleAuthProvider(),\r\n};\r\n\r\nclass Header extends Component {\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"mousedown\", this.handleOutClick);\r\n    }\r\n\r\n    handleOutClick = (e) => {\r\n        let pop = document.getElementById('userPop');\r\n        let icon = document.getElementById('userIcon');\r\n        if (pop.style.display === 'flex') {\r\n            if (this.popRef.contains(e.target) || e.target === icon) {\r\n                return;\r\n            }\r\n            this.closeUserPop()\r\n        }\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.user !== this.props.user ) {\r\n            this.props.saveUser(this.props.user);\r\n        }\r\n    }\r\n\r\n    signInHandler = () => {\r\n        this.props.signInWithGoogle().then(res => {})\r\n    };\r\n\r\n    openUserPopup = () => {\r\n        let pop = document.getElementById('userPop');\r\n            pop.style.display = 'flex';\r\n    };\r\n\r\n    closeUserPop = () => {\r\n        let pop = document.getElementById('userPop');\r\n        pop.style.display = 'none';\r\n    };\r\n\r\n    render() {\r\n        let favours = this.props.userProducts ? this.props.userProducts.length : '';\r\n        return (\r\n            <div className={classes.header}>\r\n                <Link to={'/shop'} style={{height: '100%'}}>\r\n                    <img src={process.env.PUBLIC_URL + '/Images/head-logo.png'} alt={'logo'}/>\r\n                </Link>\r\n                <div className={classes.connect}>\r\n                    {\r\n                        this.props.user ?\r\n                            <Link to='/favours'>\r\n                                <div className={classes.user_favours}>\r\n                                    <span>{favours}</span>\r\n                                    <FontAwesomeIcon icon={faHeart}/>\r\n                                </div>\r\n                            </Link>\r\n                            : null\r\n                    }\r\n                    <div className={classes.connect_cont} ref={ref => this.popRef = ref}>\r\n                        <FontAwesomeIcon icon={faUserCircle} onClick={this.openUserPopup} id='userIcon'/>\r\n                        <div className={classes.user_info} id='userPop'>\r\n                            {\r\n                                this.props.user ?\r\n                                    <div className={classes.user_logged}>\r\n                                        <img src={this.props.user.photoURL} alt={'profPic'}/>\r\n                                        <span>{this.props.user.displayName}</span>\r\n                                        <button onClick={this.props.signOut} className={classes.outButt}>Sign Out</button>\r\n                                    </div>\r\n                                    :\r\n                                    <div className={classes.user_login} onClick={this.signInHandler}>\r\n                                        <div>\r\n                                            <FontAwesomeIcon icon={faGoogle}/>\r\n                                        </div>\r\n                                        <span>LOGIN WITH GOOGLE</span>\r\n                                    </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withFirebaseAuth({\r\n    providers,\r\n    firebaseAppAuth,\r\n})(Header);\r\n","import React, {Component} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport classes from './DefContent.scss';\r\n\r\nclass DefContent extends Component {\r\n\r\n    componentDidMount() {\r\n        setTimeout(() => {\r\n            this.homeCont.classList.add(classes['opened'])\r\n        }, 500)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.content}>\r\n                {/*<div className={classes.head_img} style={{backgroundImage : `url(${process.env.PUBLIC_URL + \"/Images/house_wall.jpg\"})`}}>*/}\r\n                {/*    <div className={classes.home_cont} ref={ref => this.homeCont = ref}>*/}\r\n                {/*        <h1>Welcome to our online store</h1>*/}\r\n                {/*        <Link to={'/shop'}><button>Start Shopping</button></Link>*/}\r\n                {/*    </div>*/}\r\n                {/*</div>*/}\r\n                <div className={classes.head_img}>\r\n                    <video autoPlay muted loop id=\"myVideo\">\r\n                        <source src={process.env.PUBLIC_URL + \"/Images/BackVideo.mp4\"} type=\"video/mp4\"/>\r\n                    </video>\r\n                    <div className={classes.home_cont} ref={ref => this.homeCont = ref}>\r\n                        <h1>Welcome to our online store</h1>\r\n                        <Link to={'/shop'}><button>Start Shopping</button></Link>\r\n                    </div>\r\n                    <div className={classes.back_over}> </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DefContent;\r\n","import React, {Component} from 'react';\r\nimport classes from '../../Containers/Main/ShopHead/Products/Products.scss';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faHeart as regFaHeart} from \"@fortawesome/free-regular-svg-icons/faHeart\";\r\nimport {faHeart} from \"@fortawesome/free-solid-svg-icons/faHeart\";\r\nimport firebase from 'firebase';\r\n\r\nclass Product extends Component {\r\n\r\n    addToFavourites = (prod) => {\r\n        if(this.props.userId) {\r\n            let newPostKey = firebase.database().ref().child('/user_products/' + this.props.userId).push().key;\r\n            const pushData = {key: newPostKey, data: prod};\r\n            firebase.database().ref('/user_products/' + this.props.userId).child(newPostKey).set(pushData).then()\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let backUrl = process.env.PUBLIC_URL + '/Images/no-image-home.png';\r\n        if (this.props.data.info.imageUrl) {\r\n            backUrl = this.props.data.info.imageUrl\r\n        }\r\n\r\n        return (\r\n            <div className={classes.product} key={this.props.data.id}>\r\n                <div className={classes.img_div}\r\n                     style={{backgroundImage: `url(${backUrl})`}}>\r\n                </div>\r\n                <div className={classes.cont_div}>\r\n                    {\r\n                        this.props.isFavour ?\r\n                            <FontAwesomeIcon icon={faHeart}/>\r\n                            :\r\n                            <FontAwesomeIcon icon={regFaHeart} onClick={() => this.addToFavourites(this.props.data)}/>\r\n                    }\r\n                    <p>{this.props.data.info.name}</p>\r\n                    <p>{this.props.data.info.info}</p>\r\n                    <p>Price</p>\r\n                    <p>{this.props.data.info.price + ' AMD'}</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Product;\r\n","import React from 'react';\r\nimport classes from './Spinner.scss';\r\n\r\nconst spinner = () => (\r\n    <div className={classes.par}>\r\n        <div className={classes.main}>\r\n            <span className={classes.spinner}></span>\r\n        </div>\r\n    </div>\r\n\r\n);\r\n\r\nexport default spinner;","import React, {Component, Fragment} from 'react';\r\nimport classes from './Products.scss';\r\nimport Product from \"../../../../Components/Product/Product\";\r\nimport Spinner from \"../../../../Components/Spinner/Spinner\";\r\nimport firebase from \"firebase\";\r\n\r\nclass Products extends Component {\r\n\r\n    state = {\r\n        products: null\r\n    };\r\n\r\n    componentDidMount() {\r\n        let ref = firebase.database().ref('/products');\r\n        ref.on('value', snapshot => {\r\n            const products = snapshot.val();\r\n            const finArr = [];\r\n            for (let key in products) {\r\n                finArr.push({id: key, info : products[key]})\r\n            }\r\n            this.setState({products: finArr});\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Fragment>\r\n                {\r\n                    this.state.products ?\r\n                        <div className={classes.prod_head}>\r\n                            {\r\n                                this.state.products.map(el => {\r\n                                    let isFavour = false;\r\n                                    if (this.props.userProducts) {\r\n                                        this.props.userProducts.map(userEl => {\r\n                                            if (el.id === userEl.data.id) {\r\n                                                isFavour = true\r\n                                            }\r\n                                        })\r\n                                    }\r\n                                    return <Product data={el} key={el.id} userId={this.props.userId}\r\n                                                    isFavour={isFavour}/>\r\n                                })\r\n                            }\r\n                        </div>\r\n                        :\r\n                        <Spinner/>\r\n                }\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Products;\r\n","import React, {Component} from 'react';\r\nimport Products from \"./Products/Products\";\r\nimport classes from './ShopHead.scss';\r\n\r\nclass ShopHead extends Component {\r\n\r\n    state = {\r\n        pageSet: 0,\r\n    };\r\n\r\n    componentDidMount() {\r\n        let scrollBar = document.getElementById('topScroll');\r\n        this.shopHead.addEventListener('scroll', (e) => {\r\n            this.scrollHandler(e, scrollBar)\r\n        });\r\n    }\r\n\r\n    scrollHandler = (e, scBar) => {\r\n        let winScroll = e.target.scrollTop || e.target.scrollTop;\r\n        let height = e.target.scrollHeight - e.target.clientHeight;\r\n        let scrolled = (winScroll / height) * 100;\r\n        scBar.style.width = scrolled + '%'\r\n    };\r\n\r\n    render() {\r\n        let userId = this.props.loggedUser ? this.props.loggedUser.uid : null;\r\n\r\n        return (\r\n            <div className={classes.shop_head} ref={ref => this.shopHead = ref}>\r\n                <div className={classes.top_scroll} id='topScroll'> </div>\r\n                <Products userId={userId} userProducts={this.props.userProducts}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShopHead;\r\n","import React, {Component} from 'react';\r\nimport classes from \"./Admin.scss\";\r\nimport firebase from 'firebase';\r\n\r\nclass AdminAdd extends Component {\r\n\r\n    state = {\r\n        imageUrl: ''\r\n    };\r\n\r\n    componentDidMount() {\r\n        setTimeout(() => {\r\n            this.addRef.classList.add(classes['admin_add_cont_opened'])\r\n        }, 100)\r\n    }\r\n\r\n    selectImage = (e) => {\r\n        if (e.target.value) {\r\n            this.setState({imageUrl: URL.createObjectURL(e.target.files[0])})\r\n        }\r\n    };\r\n\r\n    removeImageHandler = () => {\r\n        this.setState({imageUrl: ''});\r\n        this.imageInput.value = '';\r\n    };\r\n\r\n    addProductHandler = () => {\r\n        if (this.nameRef.value && this.descRef.value && this.priceRef.value) {\r\n            const file = this.imageInput.files[0];\r\n            if (file) {\r\n                const storageRef = firebase.storage().ref('/');\r\n                const mainImage = storageRef.child(file.name);\r\n                mainImage.put(file).then(() => {\r\n                    storageRef.child(file.name).getDownloadURL().then((url) => {\r\n                        firebase.database().ref('/products').push({\r\n                            name: this.nameRef.value,\r\n                            info: this.descRef.value,\r\n                            price: this.priceRef.value,\r\n                            imageUrl: url\r\n                        })\r\n                    })\r\n                })\r\n            } else {\r\n                firebase.database().ref('/products').push({\r\n                    name: this.nameRef.value,\r\n                    info: this.descRef.value,\r\n                    price: this.priceRef.value,\r\n                    imageUrl: ''\r\n                }).then(res => {\r\n                    this.props.hideAdd(null, true)\r\n                })\r\n            }\r\n        } else {\r\n            alert('Please feel all fields')\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.admin_add_par} onClick={this.props.hideAdd}>\r\n                <div className={classes.admin_add_cont} ref={ref => this.addRef = ref}>\r\n                    <label>\r\n                        {\r\n                            this.state.imageUrl ?\r\n                                <div style={{backgroundImage: `url(${this.state.imageUrl})`}}> </div>\r\n                                : <div className={classes.admin_add_img}>+</div>\r\n                        }\r\n                        <input type='file' ref={ref => this.imageInput = ref} accept=\"image/*\" onChange={this.selectImage}/>\r\n                    </label>\r\n                    {this.state.imageUrl ? <button onClick={this.removeImageHandler} className={classes.admin_add_del}>Remove Image</button> : null}\r\n                    <div className={classes.admin_add_inputs}>\r\n                        <input type='text' placeholder='Product name' ref={ref => this.nameRef = ref}/>\r\n                        <textarea placeholder='Product info' ref={ref => this.descRef = ref}></textarea>\r\n                        <input type='number' placeholder='Price' step={1000} ref={ref => this.priceRef = ref} min={1000}/>\r\n                        <button onClick={this.addProductHandler}>Add</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AdminAdd;\r\n","import React, {Component} from 'react';\r\nimport classes from './Admin.scss';\r\nimport AdminAdd from \"./AdminAdd\";\r\nimport firebase from 'firebase';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faTimesCircle} from \"@fortawesome/free-regular-svg-icons\";\r\nimport {faTrashAlt} from \"@fortawesome/free-regular-svg-icons\";\r\nimport {faPencilAlt} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {faCheck} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {faTimes} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nclass AdminPanel extends Component {\r\n\r\n    state = {\r\n        products: [],\r\n        openAdd: false,\r\n        editId: null\r\n    };\r\n\r\n    componentDidMount() {\r\n        let ref = firebase.database().ref('/products');\r\n        ref.on('value', snapshot => {\r\n            const products = snapshot.val();\r\n            const finArr = [];\r\n            for (let key in products) {\r\n                finArr.push({id: key, info : products[key]})\r\n            }\r\n            this.setState({products: finArr});\r\n        });\r\n    }\r\n\r\n    hideAdd = (e, isButt) => {\r\n        if (!isButt) {\r\n            if (e.target.classList.contains(classes['admin_add_par'])) {\r\n                this.setState({openAdd: false});\r\n            }\r\n        } else {\r\n            this.setState({openAdd: false});\r\n        }\r\n    };\r\n\r\n    editProduct = (el) => {\r\n        this.setState({editId: el.id})\r\n    };\r\n\r\n    deleteProduct = (el) => {\r\n        firebase.database().ref('/products').child(el.id).remove().then();\r\n    };\r\n\r\n    saveChanges = (index, id) => {\r\n        let inputs = Array.from(document.getElementsByName('input' + index));\r\n        if(inputs[1].value && inputs[0].value && inputs[2].value) {\r\n            const pushData = {\r\n                info: inputs[1].value,\r\n                name: inputs[0].value,\r\n                price: inputs[2].value\r\n\r\n            };\r\n            firebase.database().ref('/products').child(id).update(pushData).then(() => {\r\n                this.setState({editId: null})\r\n            });\r\n        } else {\r\n            inputs.map(el => {\r\n                if (!el.value) {\r\n                    el.style.border = '1px solid #ff0000bf';\r\n                }\r\n            });\r\n        }\r\n\r\n    };\r\n\r\n    cancelEdit = (index, el) => {\r\n        let inputs = Array.from(document.getElementsByName('input' + index));\r\n        inputs[0].value = el.info.name;\r\n        inputs[1].value = el.info.info;\r\n        inputs[2].value = el.info.price;\r\n        this.setState({editId: null})\r\n    };\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className={classes.admin_panel}>\r\n                {this.state.openAdd ? <AdminAdd hideAdd={this.hideAdd}/> : null}\r\n                <div onClick={() => this.setState({openAdd : true})} className={classes.admin_add_cont_top}>Add</div>\r\n                <div className={classes.list_cont}>\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Image</th>\r\n                                <th>Name</th>\r\n                                <th>Description</th>\r\n                                <th>Price</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                this.state.products.map((el, index) => {\r\n                                    let canEdit = el.id !== this.state.editId;\r\n                                    let canEditClass = !canEdit ? 'input_can_edit' : '';\r\n                                    return (\r\n                                        <tr key={el.id} className={classes[canEditClass]}>\r\n                                            <td>\r\n                                                {\r\n                                                    el.info.imageUrl ?\r\n                                                        <img src={el.info.imageUrl}\r\n                                                             style={{height: '30px', width: '40px'}} alt='asd'/>\r\n                                                             : <FontAwesomeIcon icon={faTimesCircle}/>\r\n                                                }\r\n                                            </td>\r\n                                            <td><input type='text' name={'input' + index} defaultValue={el.info.name}\r\n                                                       readOnly={canEdit}/></td>\r\n                                            <td><input type='text' name={'input' + index} defaultValue={el.info.info}\r\n                                                       readOnly={canEdit}/></td>\r\n                                            <td><input type='text' name={'input' + index} defaultValue={el.info.price}\r\n                                                       readOnly={canEdit}/></td>\r\n                                            <td>\r\n                                                {\r\n                                                    canEdit ?\r\n                                                        <div>\r\n                                                            <FontAwesomeIcon\r\n                                                                icon={faPencilAlt}\r\n                                                                onClick={() => this.editProduct(el)}\r\n                                                                title='Edit'\r\n                                                            />\r\n                                                            <FontAwesomeIcon\r\n                                                                icon={faTrashAlt}\r\n                                                                onClick={() => this.deleteProduct(el)}\r\n                                                                title='Delete'\r\n                                                            />\r\n                                                        </div>\r\n                                                        :\r\n                                                        <div>\r\n                                                            <FontAwesomeIcon\r\n                                                                icon={faCheck}\r\n                                                                style={{color: 'green'}}\r\n                                                                onClick={() => this.saveChanges(index, el.id)}\r\n                                                                title='Change'\r\n                                                            />\r\n                                                            <FontAwesomeIcon\r\n                                                                icon={faTimes}\r\n                                                                onClick={() => this.cancelEdit(index, el)}\r\n                                                                title='Cancel'\r\n                                                            />\r\n                                                        </div>\r\n                                                }\r\n\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AdminPanel;\r\n","import React, {Component, Fragment} from 'react';\r\nimport classes from './Admin.scss';\r\nimport info from './LogPass';\r\nimport AdminPanel from \"./AdminPanel\";\r\n\r\nlet uid = \"JCJ3hwA0fANJ2t32sj5hbpph8Dm1\";\r\n\r\nclass Admin extends Component {\r\n\r\n    render() {\r\n        return (\r\n                <div>\r\n                    {\r\n                        this.props.user && this.props.user.uid === uid\r\n                            ? <AdminPanel/>\r\n                            : <div>You are not Admin</div>\r\n                    }\r\n                </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Admin;\r\n","import React, {Component} from 'react';\r\nimport classes from './Favours.scss';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faTimes} from \"@fortawesome/free-solid-svg-icons\";\r\nimport firebase from 'firebase';\r\n\r\nclass Favour extends Component {\r\n\r\n    removeFromFavours = (id) => {\r\n        firebase.database().ref('/user_products/' + this.props.userId).child(id).remove().then()\r\n    };\r\n\r\n    render() {\r\n        let backUrl = this.props.showData.imageUrl || process.env.PUBLIC_URL + '/Images/no-image-home.png';\r\n        return (\r\n            <div className={classes.favour_child}>\r\n                <div style={{backgroundImage: `url(${backUrl})`}} className={classes.favour_child_img}> </div>\r\n                <div className={classes.favour_child_cont}>\r\n                    <div>{this.props.showData.name}</div>\r\n                    <div>{this.props.showData.info}</div>\r\n                    <div>{this.props.showData.price + ' AMD'}</div>\r\n                </div>\r\n                <div className={classes.favour_child_remove} onClick={() => this.removeFromFavours(this.props.delId)}>\r\n                    <FontAwesomeIcon icon={faTimes}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Favour;","import React, {Component} from 'react';\r\nimport Favour from \"./Favour\";\r\nimport classes from './Favours.scss';\r\n\r\nclass Favours extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.favour_head}>\r\n                <div className={classes.favours_par}>\r\n                    {\r\n                        this.props.userProducts ?\r\n                            this.props.userProducts.map(el => {\r\n                                return (\r\n                                    <Favour showData={el.data.info} delId={el.key} key={el.key} userId={this.props.user.uid}/>\r\n                                )\r\n                            })\r\n                            :\r\n                            <div>Nothing To Show</div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Favours;","import React, {Component} from 'react';\r\nimport Header from \"./Header/Header\";\r\nimport DefContent from \"./DefContent/DefContent\";\r\nimport {Switch, Route} from \"react-router-dom\";\r\nimport ShopHead from \"./ShopHead/ShopHead\";\r\nimport Admin from \"../Admin/Admin\";\r\nimport firebase from 'firebase';\r\nimport Favours from \"../Favours/Favours\";\r\n\r\nclass Main extends Component {\r\n\r\n    state = {\r\n        user: null,\r\n        userProducts: null\r\n    };\r\n\r\n    saveUserHandler = (user) => {\r\n        if (user) {\r\n            this.setState({user: user}, () => {\r\n                let ref = firebase.database().ref('/user_products');\r\n                ref.on('value', snapshot => {\r\n                    const userProducts = snapshot.val()[this.state.user.uid];\r\n                    const finArr = [];\r\n                    for (let key in userProducts) {\r\n                        finArr.push(userProducts[key])\r\n                    }\r\n                    this.setState({userProducts: finArr});\r\n                });\r\n            })\r\n        } else {\r\n            this.setState({user: null, userProducts: null});\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header saveUser={this.saveUserHandler} userProducts={this.state.userProducts}/>\r\n                <Switch>\r\n                    <Route exact path='/' component={DefContent}/>\r\n                    <Route exact path='/shop' render={(props) =>\r\n                        <ShopHead {...props} loggedUser={this.state.user} userProducts={this.state.userProducts}/>\r\n                    }/>\r\n                    {/*<Route exact path='/admin' component={Admin} user={this.state.user}/>*/}\r\n                    <Route exact path='/admin' render={(props) =>\r\n                        <Admin {...props} user={this.state.user}/>\r\n                    }/>\r\n                    <Route exact path='/favours' render={(props) =>\r\n                        <Favours {...props} userProducts={this.state.userProducts} user={this.state.user}/>\r\n                    }/>\r\n                </Switch>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;\r\n","import React, { Component } from 'react';\r\nimport classes from './App.scss';\r\nimport Main from \"./Containers/Main/Main\";\r\nimport {Route} from \"react-router-dom\";\r\n\r\n\r\n\r\nclass App extends Component{\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.App}>\r\n                <Route path='/' component={Main}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport reducer from './store/reducer';\r\n// import { BrowserRouter } from 'react-router-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\n\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst store = createStore(reducer);\r\n\r\nReactDOM.render(<HashRouter basename={window.location.pathname || ''}>\r\n                    <Provider store={store}><App /></Provider>\r\n                </HashRouter>, document.getElementById('root'));\r\n// serviceWorker.register();\r\n"],"sourceRoot":""}