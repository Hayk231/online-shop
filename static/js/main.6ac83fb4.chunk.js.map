{"version":3,"sources":["Containers/Admin/Admin.scss","Containers/Main/Header/Header.scss","Containers/Favours/Favours.scss","Containers/Main/ShopHead/Products/Products.scss","Containers/Main/DefContent/DefContent.scss","App.scss","Containers/Main/ShopHead/ShopHead.scss","store/reducer.js","firebaseConfig.js","Containers/Main/Header/Header.js","Containers/Main/DefContent/DefContent.js","Components/Product/Product.js","Containers/Main/ShopHead/Products/Products.js","Containers/Main/ShopHead/ShopHead.js","Containers/Admin/LogPass.js","Containers/Admin/AdminAdd.js","Containers/Admin/AdminPanel.js","Containers/Admin/Admin.js","Containers/Favours/Favour.js","Containers/Favours/Favours.js","Containers/Main/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","initialState","allData","reducer","state","action","type","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseAppAuth","firebase","firebaseConfig","auth","providers","googleProvider","GoogleAuthProvider","Header","handleOutClick","e","pop","document","getElementById","icon","style","display","popRef","contains","target","closeUserPop","scrollTopHandler","window","scrollTo","top","behavior","signInHandler","props","signInWithGoogle","then","res","openUserPopup","addEventListener","this","prevProps","prevState","snapshot","user","saveUser","favours","userProducts","length","className","classes","header","src","onClick","alt","connect","to","user_favours","faHeart","connect_cont","ref","faUserCircle","id","user_info","user_logged","photoURL","displayName","signOut","outButt","user_login","faGoogle","Component","withFirebaseAuth","DefContent","setTimeout","homeCont","classList","add","content","head_img","home_cont","Product","addToFavourites","prod","userId","newPostKey","database","child","push","key","pushData","data","set","backUrl","info","imageUrl","product","img_div","backgroundImage","cont_div","isFavour","regFaHeart","name","price","Products","products","on","val","finArr","setState","prod_head","map","el","userEl","ShopHead","loggedUser","uid","shop_head","login","pass","AdminAdd","selectImage","value","URL","createObjectURL","files","removeImageHandler","imageInput","addProductHandler","nameRef","descRef","priceRef","file","storageRef","storage","put","getDownloadURL","url","alert","addRef","admin_add_par","hideAdd","admin_add_cont","admin_add_img","accept","onChange","admin_add_del","admin_add_inputs","placeholder","step","min","AdminPanel","openAdd","editId","editProduct","deleteProduct","remove","saveChanges","index","inputs","Array","from","getElementsByName","update","border","cancelEdit","admin_panel","admin_add_cont_top","list_cont","canEdit","canEditClass","height","width","faTimesCircle","defaultValue","readOnly","faPencilAlt","title","faTrashAlt","faCheck","color","faTimes","Admin","isOpened","correct","openAdmin","preventDefault","logRef","passRef","admin","log_form","onSubmit","autoComplete","Favour","removeFromFavours","showData","favour_child","favour_child_img","favour_child_cont","favour_child_remove","delId","Favours","favour_head","favours_par","Main","saveUserHandler","exact","path","component","render","App","Boolean","location","hostname","match","store","createStore","ReactDOM","basename","process"],"mappings":"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","file":"static/js/main.6ac83fb4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"admin\":\"Admin__admin___1O2go\",\"log_form\":\"Admin__log_form___3XmnU\",\"admin_panel\":\"Admin__admin_panel___327_n\",\"admin_add_cont_top\":\"Admin__admin_add_cont_top___2QEsz\",\"list_cont\":\"Admin__list_cont___3gS55\",\"input_can_edit\":\"Admin__input_can_edit___2kBfW\",\"admin_add_par\":\"Admin__admin_add_par___1NeXZ\",\"admin_add_cont\":\"Admin__admin_add_cont___1HF1L\",\"admin_add_img\":\"Admin__admin_add_img___1-LAN\",\"admin_add_inputs\":\"Admin__admin_add_inputs___2jPUX\",\"admin_add_del\":\"Admin__admin_add_del___2YeHY\",\"admin_add_cont_opened\":\"Admin__admin_add_cont_opened___acSAq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header__header___3i1v2\",\"connect\":\"Header__connect___1xXgL\",\"connect_cont\":\"Header__connect_cont___MXSpB\",\"user_info\":\"Header__user_info___3SjkQ\",\"user_login\":\"Header__user_login___370rd\",\"user_logged\":\"Header__user_logged___2KrDO\",\"outButt\":\"Header__outButt___330SN\",\"user_favours\":\"Header__user_favours___EIz9q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"favour_head\":\"Favours__favour_head___3n2vt\",\"favours_par\":\"Favours__favours_par___3Vpsm\",\"favour_child\":\"Favours__favour_child___Xtk1f\",\"favour_child_img\":\"Favours__favour_child_img___2NHZW\",\"favour_child_cont\":\"Favours__favour_child_cont___2DPgh\",\"favour_child_remove\":\"Favours__favour_child_remove___3GgBg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"prod_head\":\"Products__prod_head___369ZW\",\"product\":\"Products__product___3i_pV\",\"img_div\":\"Products__img_div___3b4re\",\"cont_div\":\"Products__cont_div___1ouqj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"DefContent__content___1tKsQ\",\"head_img\":\"DefContent__head_img___3Ncs6\",\"home_cont\":\"DefContent__home_cont___33xwx\",\"opened\":\"DefContent__opened___1obJK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App__App___wmyqV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"shop_head\":\"ShopHead__shop_head___1BBXh\"};","const initialState = {\r\n    allData: []\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'GET_DATA' : {\r\n            // const finArr = [];\r\n            // let ref = firebase.database().ref('/products');\r\n            // ref.on('value', snapshot => {\r\n            //     const products = snapshot.val();\r\n            //     for (let key in products) {\r\n            //         finArr.push({id: key, info : products[key]})\r\n            //     }\r\n            // });\r\n            return {\r\n                ...state,\r\n                allData: []\r\n            };\r\n        }\r\n\r\n        default : return state\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n","const config = {\r\n    apiKey: \"AIzaSyAd_iZpMCUr64IfgmpMC8VzMlNxc89lyXU\",\r\n    authDomain: \"online-shop-757ab.firebaseapp.com\",\r\n    databaseURL: \"https://online-shop-757ab.firebaseio.com\",\r\n    projectId: \"online-shop-757ab\",\r\n    storageBucket: \"online-shop-757ab.appspot.com\",\r\n    messagingSenderId: \"454382573274\",\r\n    appId: \"1:454382573274:web:b301179a639886b28f37e3\",\r\n    measurementId: \"G-HGLPLTY0Q2\"\r\n};\r\n\r\nexport default config;","import React, {Component} from 'react';\r\nimport classes from './Header.scss';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport withFirebaseAuth from 'react-with-firebase-auth'\r\nimport * as firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport firebaseConfig from '../../../firebaseConfig';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faHeart} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {faUserCircle} from \"@fortawesome/free-regular-svg-icons/faUserCircle\";\r\nimport {faGoogle} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst firebaseAppAuth = firebaseApp.auth();\r\nconst providers = {\r\n    googleProvider: new firebase.auth.GoogleAuthProvider(),\r\n};\r\n\r\nclass Header extends Component {\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"mousedown\", this.handleOutClick);\r\n    }\r\n\r\n    handleOutClick = (e) => {\r\n        let pop = document.getElementById('userPop');\r\n        let icon = document.getElementById('userIcon');\r\n        if (pop.style.display === 'flex') {\r\n            if (this.popRef.contains(e.target) || e.target === icon) {\r\n                return;\r\n            }\r\n            this.closeUserPop()\r\n        }\r\n    };\r\n\r\n    scrollTopHandler = () => {\r\n        window.scrollTo({\r\n            top: 0,\r\n            behavior: \"smooth\"\r\n        });\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.user !== this.props.user ) {\r\n            this.props.saveUser(this.props.user);\r\n        }\r\n    }\r\n\r\n    signInHandler = () => {\r\n        this.props.signInWithGoogle().then(res => {})\r\n    };\r\n\r\n    openUserPopup = () => {\r\n        let pop = document.getElementById('userPop');\r\n            pop.style.display = 'flex';\r\n    };\r\n\r\n    closeUserPop = () => {\r\n        let pop = document.getElementById('userPop');\r\n        pop.style.display = 'none';\r\n    };\r\n\r\n    render() {\r\n        let favours = this.props.userProducts ? this.props.userProducts.length : '';\r\n\r\n        return (\r\n            <div className={classes.header}>\r\n                <img src={'/Images/head-logo.png'} onClick={this.scrollTopHandler} alt={'logo'}/>\r\n                <div className={classes.connect}>\r\n                    {\r\n                        this.props.user ?\r\n                            <Link to='/en/favours'>\r\n                                <div className={classes.user_favours}>\r\n                                    <span>{favours}</span>\r\n                                    <FontAwesomeIcon icon={faHeart}/>\r\n                                </div>\r\n                            </Link>\r\n                            : null\r\n                    }\r\n                    <div className={classes.connect_cont} ref={ref => this.popRef = ref}>\r\n                        <FontAwesomeIcon icon={faUserCircle} onClick={this.openUserPopup} id='userIcon'/>\r\n                        <div className={classes.user_info} id='userPop'>\r\n                            {\r\n                                this.props.user ?\r\n                                    <div className={classes.user_logged}>\r\n                                        <img src={this.props.user.photoURL} alt={'profPic'}/>\r\n                                        <span>{this.props.user.displayName}</span>\r\n                                        <button onClick={this.props.signOut} className={classes.outButt}>Sign Out</button>\r\n                                    </div>\r\n                                    :\r\n                                    <div className={classes.user_login} onClick={this.signInHandler}>\r\n                                        <div>\r\n                                            <FontAwesomeIcon icon={faGoogle}/>\r\n                                        </div>\r\n                                        <span>LOGIN WITH GOOGLE</span>\r\n                                    </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withFirebaseAuth({\r\n    providers,\r\n    firebaseAppAuth,\r\n})(Header);\r\n","import React, {Component} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport classes from './DefContent.scss';\r\n\r\nclass DefContent extends Component {\r\n\r\n    componentDidMount() {\r\n        setTimeout(() => {\r\n            this.homeCont.classList.add(classes['opened'])\r\n        }, 500)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.content}>\r\n                <div className={classes.head_img}>\r\n                    <div className={classes.home_cont} ref={ref => this.homeCont = ref}>\r\n                        <h1>Welcome to our online store</h1>\r\n                        <Link to={'/en/shop'}><button>Start Shopping</button></Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DefContent;","import React, {Component} from 'react';\r\nimport classes from '../../Containers/Main/ShopHead/Products/Products.scss';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faHeart as regFaHeart} from \"@fortawesome/free-regular-svg-icons/faHeart\";\r\nimport {faHeart} from \"@fortawesome/free-solid-svg-icons/faHeart\";\r\nimport firebase from 'firebase';\r\n\r\nclass Product extends Component {\r\n\r\n    addToFavourites = (prod) => {\r\n        if(this.props.userId) {\r\n            let newPostKey = firebase.database().ref().child('/user_products/' + this.props.userId).push().key;\r\n            const pushData = {key: newPostKey, data: prod};\r\n            firebase.database().ref('/user_products/' + this.props.userId).child(newPostKey).set(pushData).then()\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let backUrl = '/Images/no-image-home.png';\r\n        if (this.props.data.info.imageUrl) {\r\n            backUrl = this.props.data.info.imageUrl\r\n        }\r\n\r\n        return (\r\n            <div className={classes.product} key={this.props.data.id}>\r\n                <div className={classes.img_div}\r\n                     style={{backgroundImage: `url(${backUrl})`}}>\r\n                </div>\r\n                <div className={classes.cont_div}>\r\n                    {\r\n                        this.props.isFavour ?\r\n                            <FontAwesomeIcon icon={faHeart}/>\r\n                            :\r\n                            <FontAwesomeIcon icon={regFaHeart} onClick={() => this.addToFavourites(this.props.data)}/>\r\n                    }\r\n                    <p>{this.props.data.info.name}</p>\r\n                    <p>{this.props.data.info.info}</p>\r\n                    <p>Price</p>\r\n                    <p>{this.props.data.info.price + ' AMD'}</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Product;\r\n","import React, {Component} from 'react';\r\nimport classes from './Products.scss';\r\nimport Product from \"../../../../Components/Product/Product\";\r\nimport firebase from \"firebase\";\r\n\r\nclass Products extends Component {\r\n\r\n    state = {\r\n        products: []\r\n    };\r\n\r\n    componentDidMount() {\r\n        let ref = firebase.database().ref('/products');\r\n        ref.on('value', snapshot => {\r\n            const products = snapshot.val();\r\n            const finArr = [];\r\n            for (let key in products) {\r\n                finArr.push({id: key, info : products[key]})\r\n            }\r\n            this.setState({products: finArr});\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className={classes.prod_head}>\r\n                {\r\n                    this.state.products.map(el => {\r\n                        let isFavour = false;\r\n                        if (this.props.userProducts) {\r\n                            this.props.userProducts.map(userEl => {\r\n                                if (el.id === userEl.data.id) {\r\n                                    isFavour = true\r\n                                }\r\n                            })\r\n                        }\r\n                        return <Product data={el} key={el.id} userId={this.props.userId}\r\n                                        isFavour={isFavour}/>\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Products;\r\n","import React, {Component} from 'react';\r\nimport Products from \"./Products/Products\";\r\nimport classes from './ShopHead.scss';\r\n\r\nclass ShopHead extends Component {\r\n    render() {\r\n        let userId = this.props.loggedUser ? this.props.loggedUser.uid : null;\r\n\r\n        return (\r\n            <div className={classes.shop_head}>\r\n                <Products userId={userId} userProducts={this.props.userProducts}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShopHead;\r\n","const info = {\r\n    login: 'admin@admin',\r\n    pass :'adminpass'\r\n};\r\nexport default info;","import React, {Component} from 'react';\r\nimport classes from \"./Admin.scss\";\r\nimport firebase from 'firebase';\r\n\r\nclass AdminAdd extends Component {\r\n\r\n    state = {\r\n        imageUrl: ''\r\n    };\r\n\r\n    componentDidMount() {\r\n        setTimeout(() => {\r\n            this.addRef.classList.add(classes['admin_add_cont_opened'])\r\n        }, 100)\r\n    }\r\n\r\n    selectImage = (e) => {\r\n        if (e.target.value) {\r\n            this.setState({imageUrl: URL.createObjectURL(e.target.files[0])})\r\n        }\r\n    };\r\n\r\n    removeImageHandler = () => {\r\n        this.setState({imageUrl: ''});\r\n        this.imageInput.value = '';\r\n    };\r\n\r\n    addProductHandler = () => {\r\n        if (this.nameRef.value && this.descRef.value && this.priceRef.value) {\r\n            const file = this.imageInput.files[0];\r\n            if (file) {\r\n                const storageRef = firebase.storage().ref('/');\r\n                const mainImage = storageRef.child(file.name);\r\n                mainImage.put(file).then(() => {\r\n                    storageRef.child(file.name).getDownloadURL().then((url) => {\r\n                        firebase.database().ref('/products').push({\r\n                            name: this.nameRef.value,\r\n                            info: this.descRef.value,\r\n                            price: this.priceRef.value,\r\n                            imageUrl: url\r\n                        })\r\n                    })\r\n                })\r\n            } else {\r\n                firebase.database().ref('/products').push({\r\n                    name: this.nameRef.value,\r\n                    info: this.descRef.value,\r\n                    price: this.priceRef.value,\r\n                    imageUrl: ''\r\n                })\r\n            }\r\n        } else {\r\n            alert('Please feel all fields')\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.admin_add_par} onClick={this.props.hideAdd}>\r\n                <div className={classes.admin_add_cont} ref={ref => this.addRef = ref}>\r\n                    <label>\r\n                        {\r\n                            this.state.imageUrl ?\r\n                                <div style={{backgroundImage: `url(${this.state.imageUrl})`}}> </div>\r\n                                : <div className={classes.admin_add_img}>+</div>\r\n                        }\r\n                        <input type='file' ref={ref => this.imageInput = ref} accept=\"image/*\" onChange={this.selectImage}/>\r\n                    </label>\r\n                    {this.state.imageUrl ? <button onClick={this.removeImageHandler} className={classes.admin_add_del}>Remove Image</button> : null}\r\n                    <div className={classes.admin_add_inputs}>\r\n                        <input type='text' placeholder='Product name' ref={ref => this.nameRef = ref}/>\r\n                        <textarea placeholder='Product info' ref={ref => this.descRef = ref}></textarea>\r\n                        <input type='number' placeholder='Price' step={1000} ref={ref => this.priceRef = ref} min={1000}/>\r\n                        <button onClick={this.addProductHandler}>Add</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AdminAdd;\r\n","import React, {Component} from 'react';\r\nimport classes from './Admin.scss';\r\nimport AdminAdd from \"./AdminAdd\";\r\nimport firebase from 'firebase';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faTimesCircle} from \"@fortawesome/free-regular-svg-icons\";\r\nimport {faTrashAlt} from \"@fortawesome/free-regular-svg-icons\";\r\nimport {faPencilAlt} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {faCheck} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {faTimes} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nclass AdminPanel extends Component {\r\n\r\n    state = {\r\n        products: [],\r\n        openAdd: false,\r\n        editId: null\r\n    };\r\n\r\n    componentDidMount() {\r\n        let ref = firebase.database().ref('/products');\r\n        ref.on('value', snapshot => {\r\n            const products = snapshot.val();\r\n            const finArr = [];\r\n            for (let key in products) {\r\n                finArr.push({id: key, info : products[key]})\r\n            }\r\n            this.setState({products: finArr});\r\n        });\r\n    }\r\n\r\n    hideAdd = (e) => {\r\n        if (e.target.classList.contains(classes['admin_add_par'])) {\r\n            this.setState({openAdd: false});\r\n        }\r\n    };\r\n\r\n    editProduct = (el) => {\r\n        this.setState({editId: el.id})\r\n    };\r\n\r\n    deleteProduct = (el) => {\r\n        firebase.database().ref('/products').child(el.id).remove().then();\r\n    };\r\n\r\n    saveChanges = (index, id) => {\r\n        let inputs = Array.from(document.getElementsByName('input' + index));\r\n        if(inputs[1].value && inputs[0].value && inputs[2].value) {\r\n            const pushData = {\r\n                info: inputs[1].value,\r\n                name: inputs[0].value,\r\n                price: inputs[2].value\r\n\r\n            };\r\n            firebase.database().ref('/products').child(id).update(pushData).then(() => {\r\n                this.setState({editId: null})\r\n            });\r\n        } else {\r\n            inputs.map(el => {\r\n                if (!el.value) {\r\n                    el.style.border = '1px solid #ff0000bf';\r\n                }\r\n            });\r\n        }\r\n\r\n    };\r\n\r\n    cancelEdit = (index, el) => {\r\n        let inputs = Array.from(document.getElementsByName('input' + index));\r\n        inputs[0].value = el.info.name;\r\n        inputs[1].value = el.info.info;\r\n        inputs[2].value = el.info.price;\r\n        this.setState({editId: null})\r\n    };\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className={classes.admin_panel}>\r\n                {this.state.openAdd ? <AdminAdd hideAdd={this.hideAdd}/> : null}\r\n                <div onClick={() => this.setState({openAdd : true})} className={classes.admin_add_cont_top}>Add</div>\r\n                <div className={classes.list_cont}>\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Image</th>\r\n                                <th>Name</th>\r\n                                <th>Description</th>\r\n                                <th>Price</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                this.state.products.map((el, index) => {\r\n                                    let canEdit = el.id !== this.state.editId;\r\n                                    let canEditClass = !canEdit ? 'input_can_edit' : '';\r\n                                    return (\r\n                                        <tr key={el.id} className={classes[canEditClass]}>\r\n                                            <td>\r\n                                                {\r\n                                                    el.info.imageUrl ?\r\n                                                        <img src={el.info.imageUrl}\r\n                                                             style={{height: '30px', width: '40px'}} alt='asd'/>\r\n                                                             : <FontAwesomeIcon icon={faTimesCircle}/>\r\n                                                }\r\n                                            </td>\r\n                                            <td><input type='text' name={'input' + index} defaultValue={el.info.name}\r\n                                                       readOnly={canEdit}/></td>\r\n                                            <td><input type='text' name={'input' + index} defaultValue={el.info.info}\r\n                                                       readOnly={canEdit}/></td>\r\n                                            <td><input type='text' name={'input' + index} defaultValue={el.info.price}\r\n                                                       readOnly={canEdit}/></td>\r\n                                            <td>\r\n                                                {\r\n                                                    canEdit ?\r\n                                                        <div>\r\n                                                            <FontAwesomeIcon\r\n                                                                icon={faPencilAlt}\r\n                                                                onClick={() => this.editProduct(el)}\r\n                                                                title='Edit'\r\n                                                            />\r\n                                                            <FontAwesomeIcon\r\n                                                                icon={faTrashAlt}\r\n                                                                onClick={() => this.deleteProduct(el)}\r\n                                                                title='Delete'\r\n                                                            />\r\n                                                        </div>\r\n                                                        :\r\n                                                        <div>\r\n                                                            <FontAwesomeIcon\r\n                                                                icon={faCheck}\r\n                                                                style={{color: 'green'}}\r\n                                                                onClick={() => this.saveChanges(index, el.id)}\r\n                                                                title='Change'\r\n                                                            />\r\n                                                            <FontAwesomeIcon\r\n                                                                icon={faTimes}\r\n                                                                onClick={() => this.cancelEdit(index, el)}\r\n                                                                title='Cancel'\r\n                                                            />\r\n                                                        </div>\r\n                                                }\r\n\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AdminPanel;\r\n","import React, {Component, Fragment} from 'react';\r\nimport classes from './Admin.scss';\r\nimport info from './LogPass';\r\nimport AdminPanel from \"./AdminPanel\";\r\n\r\nclass Admin extends Component {\r\n\r\n    state = {\r\n        isOpened: false,\r\n        correct: 'none'\r\n    };\r\n\r\n    openAdmin = (e) => {\r\n        e.preventDefault();\r\n        if (this.logRef.value === info.login && this.passRef.value === info.pass) {\r\n            this.setState({isOpened: false})\r\n        } else {\r\n            this.setState({correct : 'block'})\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                {\r\n                    this.state.isOpened ?\r\n                        <div className={classes.admin}>\r\n                            <form className={classes.log_form} onSubmit={this.openAdmin}>\r\n                                <h1>Admin Panel</h1>\r\n                                <p style={{display: this.state.correct}}>Incorrect Username or Password</p>\r\n                                <input type='text' placeholder='Username' ref={ref => this.logRef = ref}/>\r\n                                <input type='password' placeholder='Password'\r\n                                       ref={ref => this.passRef = ref} autoComplete=\"on\"/>\r\n                                <button>Sign In</button>\r\n                            </form>\r\n                        </div>\r\n                        :\r\n                        <AdminPanel/>\r\n                }\r\n            </Fragment>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Admin;\r\n","import React, {Component} from 'react';\r\nimport classes from './Favours.scss';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faTimes} from \"@fortawesome/free-solid-svg-icons\";\r\nimport firebase from 'firebase';\r\n\r\nclass Favour extends Component {\r\n\r\n    removeFromFavours = (id) => {\r\n        firebase.database().ref('/user_products/' + this.props.userId).child(id).remove().then()\r\n    };\r\n\r\n    render() {\r\n        let backUrl = this.props.showData.imageUrl || '/Images/no-image-home.png'\r\n        return (\r\n            <div className={classes.favour_child}>\r\n                <div style={{backgroundImage: `url(${backUrl})`}} className={classes.favour_child_img}> </div>\r\n                <div className={classes.favour_child_cont}>\r\n                    <div>{this.props.showData.name}</div>\r\n                    <div>{this.props.showData.info}</div>\r\n                    <div>{this.props.showData.price + ' AMD'}</div>\r\n                </div>\r\n                <div className={classes.favour_child_remove} onClick={() => this.removeFromFavours(this.props.delId)}>\r\n                    <FontAwesomeIcon icon={faTimes}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Favour;","import React, {Component} from 'react';\r\nimport Favour from \"./Favour\";\r\nimport classes from './Favours.scss';\r\n\r\nclass Favours extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.favour_head}>\r\n                <div className={classes.favours_par}>\r\n                    {\r\n                        this.props.userProducts ?\r\n                            this.props.userProducts.map(el => {\r\n                                return (\r\n                                    <Favour showData={el.data.info} delId={el.key} key={el.key} userId={this.props.user.uid}/>\r\n                                )\r\n                            })\r\n                            :\r\n                            <div>Nothing To Show</div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Favours;","import React, {Component} from 'react';\r\nimport Header from \"./Header/Header\";\r\nimport DefContent from \"./DefContent/DefContent\";\r\nimport {Switch, Route} from \"react-router-dom\";\r\nimport ShopHead from \"./ShopHead/ShopHead\";\r\nimport Admin from \"../Admin/Admin\";\r\nimport firebase from 'firebase';\r\nimport Favours from \"../Favours/Favours\";\r\n\r\nclass Main extends Component {\r\n\r\n    state = {\r\n        user: null,\r\n        userProducts: null\r\n    };\r\n\r\n    saveUserHandler = (user) => {\r\n        if (user) {\r\n            this.setState({user: user}, () => {\r\n                let ref = firebase.database().ref('/user_products');\r\n                ref.on('value', snapshot => {\r\n                    const userProducts = snapshot.val()[this.state.user.uid];\r\n                    const finArr = [];\r\n                    for (let key in userProducts) {\r\n                        finArr.push(userProducts[key])\r\n                    }\r\n                    this.setState({userProducts: finArr});\r\n                });\r\n            })\r\n        } else {\r\n            this.setState({user: null, userProducts: null});\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header saveUser={this.saveUserHandler} userProducts={this.state.userProducts}/>\r\n                <Switch>\r\n                    <Route exact path='/en' component={DefContent}/>\r\n                    <Route exact path='/en/shop' render={(props) =>\r\n                        <ShopHead {...props} loggedUser={this.state.user} userProducts={this.state.userProducts}/>\r\n                    }/>\r\n                    <Route exact path='/en/admin' component={Admin}/>\r\n                    <Route exact path='/en/favours' render={(props) =>\r\n                        <Favours {...props} userProducts={this.state.userProducts} user={this.state.user}/>\r\n                    }/>\r\n                </Switch>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;\r\n","import React, { Component } from 'react';\r\nimport classes from './App.scss';\r\nimport Main from \"./Containers/Main/Main\";\r\nimport {Switch, Route, Redirect} from \"react-router-dom\";\r\nimport Admin from \"./Containers/Admin/Admin\";\r\n\r\n\r\n\r\nclass App extends Component{\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.App}>\r\n                <Switch>\r\n                    {/*<Redirect exact from=\"/\" to=\"/en\" />*/}\r\n                    <Route path='/en' component={Main}/>\r\n                    {/*<Route exact path='/admin' component={Admin}/>*/}\r\n                </Switch>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport reducer from './store/reducer';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst store = createStore(reducer);\r\n\r\nReactDOM.render(<BrowserRouter basename={process.env.PUBLIC_URL}>\r\n                    <Provider store={store}><App /></Provider>\r\n                </BrowserRouter>, document.getElementById('root'));\r\n// serviceWorker.register();"],"sourceRoot":""}